<#@ template debug="false" hostspecific="true" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ assembly name="System.Xml" #>
<#@ assembly name="System.Xml.Linq" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.Xml.Linq" #>
<#@ include file="..\..\Common.tt" #>
<#@ output extension=".cs" #>
<#
    string xmlPath = Host.ResolvePath(@"..\Blueprint.xml");
    XElement xml = XElement.Load(xmlPath);
#>

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

<# foreach (XElement operation in xml.Descendants("operation")) { #>
using SampleHttpApplication.BusinessLogicComponents.Interface.<#= (string)xml.Attribute("name") #>.<#= (string)operation.Attribute("name") #>;
<# } #>
using SampleHttpApplication.DataAccessComponents.Interface;

namespace SampleHttpApplication.BusinessLogicComponents.Interface.<#= (string)xml.Attribute("name") #>
{
    /// <summary>
    /// Represents the <#= (string)xml.Attribute("name") #> business logic component.
    /// </summary>
    public interface I<#= (string)xml.Attribute("name") #>BusinessLogicComponent
    {
<# ForEachSeparated(xml.Descendants("operation"), (operation) => { #>
        /// <summary>
        /// <#= (string)operation.Element("summary") #>
        /// </summary>
        Task<<#= (string)operation.Attribute("name") #>BusinessResponse> <#= (string)operation.Attribute("name") #>(IDatabaseConnection databaseConnection, <#= (string)operation.Attribute("name") #>BusinessRequest businessRequest);
<# }, () => { #>

<# }); #>
    }
}
