<#@ assembly name="System.Core" #>
<#@ assembly name="System.Xml" #>
<#@ assembly name="System.Xml.Linq" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.Xml.Linq" #><#+
	
	public string CamelCased(string text)
	{
		return text.Substring(0, 1).ToLower() + text.Substring(1);
	}

	public void ForEachSeparated(IEnumerable<XElement> elements, Action<XElement> elementAction, Action separatorAction)
	{
		if (elements.Count() == 0)
		{
			return;
		}

		foreach (XElement element in elements.Take(elements.Count() - 1))
		{
			elementAction(element);
			separatorAction();
		}

		elementAction(elements.Skip(elements.Count() - 1).Single());
	}

	public void ForEachSeparatedRecursive(IEnumerable<XElement> elements, Action<XElement> beginElementAction, Func<XElement, IEnumerable<XElement>> getChildsFunction, Action<XElement> endElementAction, Action separatorAction)
	{
		Action<XElement> elementAction = (element) =>
		{
			beginElementAction(element);
			PushIndent("    ");
			ForEachSeparatedRecursive(getChildsFunction(element), beginElementAction, getChildsFunction, endElementAction, separatorAction);
			PopIndent();
			endElementAction(element);
		};

		ForEachSeparated(elements, elementAction, separatorAction);
	}
#>