<#@ template debug="false" hostspecific="true" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ assembly name="System.Xml" #>
<#@ assembly name="System.Xml.Linq" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.Xml.Linq" #>
<#@ include file="..\Common.tt" #>
<#@ output extension=".txt" #>
<#
    string xmlPath = Host.ResolvePath(@"..\Blueprint.xml");
    XElement xml = XElement.Load(xmlPath);
#>

    // Create the <#= (string)xml.Attribute("name") #> data row.
    operationData.<#= (string)xml.Attribute("name") #>DataRow = new <#= (string)xml.Attribute("name") #>DataRow();
<# foreach (XElement column in NonPrimaryKeyColumns(xml)) { #>
    operationData.<#= (string)xml.Attribute("name") #>DataRow.<#= column.Attribute("name").Value #> = ;
<# } #>
    await this.<#= CamelCased((string)xml.Attribute("name")) #>DataAccessComponent.Create(databaseConnection, operationData.<#= (string)xml.Attribute("name") #>DataRow);

<# foreach (XElement query in xml.Element("queries").Elements("query").Where(query => (string)query.Attribute("results") == "single")) { #>
    // Read the <#= (string)xml.Attribute("name") #> data row.
    operationData.<#= (string)xml.Attribute("name") #>DataRow = await this.<#= CamelCased((string)xml.Attribute("name")) #>DataAccessComponent.<#= (string)query.Attribute("name") #>(databaseConnection, );

<# } #>
<# foreach (XElement query in xml.Element("queries").Elements("query").Where(query => (string)query.Attribute("results") == "multiple")) { #>
    // Read the <#= (string)xml.Attribute("name") #> data rows.
    operationData.<#= (string)xml.Attribute("name") #>DataRows = await this.<#= CamelCased((string)xml.Attribute("name")) #>DataAccessComponent.<#= (string)query.Attribute("name") #>(databaseConnection, );

<# } #>
    // Update the <#= (string)xml.Attribute("name") #> data row.
<# foreach (XElement column in NonPrimaryKeyColumns(xml)) { #>
    operationData.<#= (string)xml.Attribute("name") #>DataRow.<#= column.Attribute("name").Value #> = ;
<# } #>
    await this.<#= CamelCased((string)xml.Attribute("name")) #>DataAccessComponent.Update(databaseConnection, operationData.<#= (string)xml.Attribute("name") #>DataRow);

    // Delete the <#= (string)xml.Attribute("name") #> data row.
    await this.<#= CamelCased((string)xml.Attribute("name")) #>DataAccessComponent.Delete(databaseConnection, operationData.<#= (string)xml.Attribute("name") #>DataRow);
