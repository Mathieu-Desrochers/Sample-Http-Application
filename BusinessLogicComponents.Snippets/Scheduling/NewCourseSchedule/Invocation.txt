
    // Build the NewCourseSchedule business request.
    NewCourseScheduleBusinessRequest newCourseScheduleBusinessRequest = new NewCourseScheduleBusinessRequest();

    // Build the Session business request element.
    NewCourseScheduleBusinessRequest.SessionBusinessRequestElement sessionBusinessRequestElement = new NewCourseScheduleBusinessRequest.SessionBusinessRequestElement();
    sessionBusinessRequestElement.SessionCode = ;
    newCourseScheduleBusinessRequest.Session = sessionBusinessRequestElement;

    // Build the CourseSchedule business request element.
    NewCourseScheduleBusinessRequest.CourseScheduleBusinessRequestElement courseScheduleBusinessRequestElement = new NewCourseScheduleBusinessRequest.CourseScheduleBusinessRequestElement();
    courseScheduleBusinessRequestElement.DayOfWeek = ;
    courseScheduleBusinessRequestElement.Time = ;
    newCourseScheduleBusinessRequest.CourseSchedule = courseScheduleBusinessRequestElement;

    // Build the CourseGroup business request elements.
    List<NewCourseScheduleBusinessRequest.CourseGroupBusinessRequestElement> courseGroupBusinessRequestElements = new List<NewCourseScheduleBusinessRequest.CourseGroupBusinessRequestElement>();
    foreach ( in )
    {
        // Build the CourseGroup business request element.
        NewCourseScheduleBusinessRequest.CourseGroupBusinessRequestElement courseGroupBusinessRequestElement = new NewCourseScheduleBusinessRequest.CourseGroupBusinessRequestElement();
        courseGroupBusinessRequestElement.PlacesCount = ;
        courseGroupBusinessRequestElements.Add(courseGroupBusinessRequestElement);
    }

    // Set the CourseGroup business request elements.
    courseScheduleBusinessRequestElement.CourseGroups = courseGroupBusinessRequestElements.ToArray();

    // Invoke the NewCourseSchedule business operation.
    NewCourseScheduleBusinessResponse newCourseScheduleBusinessResponse = await this.schedulingBusinessLogicComponent.NewCourseSchedule(databaseConnection, newCourseScheduleBusinessRequest);
